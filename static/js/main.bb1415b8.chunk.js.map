{"version":3,"sources":["components/shop-header/index.js","components/shop-header/shop-header.js","components/bookstore-service-context/bookstore-service-context.js","components/hoc-helpers/with-bookstore-service.js","actions/index.js","utils/compose.js","components/spinner/index.js","components/spinner/spinner.js","components/book-list-item/index.js","components/book-list-item/book-list-item.js","components/error-indicator/index.js","components/error-indicator/error-indicator.js","components/book-list/book-list.js","components/book-list/index.js","components/shopping-cart-table/shopping-cart-table.js","components/pages/home-page.js","components/shopping-cart-table/index.js","components/pages/cart-page.js","components/app/index.js","components/app/app.js","components/error-boundry/index.js","components/error-boundry/error-boundry.js","services/bookstore-service.js","reducers/book-list.js","reducers/shopping-cart.js","reducers/index.js","store.js","index.js"],"names":["ShopHeader","connect","shoppingCart","cartItems","orderTotal","numItems","length","total","className","to","React","createContext","BookstoreServiceProvider","Provider","BookstoreServiceConsumer","Consumer","withBookstoreService","Wrapper","props","bookstoreService","fetchBooks","dispatch","type","getBooks","then","data","payload","catch","err","bookAddedToCart","bookId","compose","funcs","comp","reduceRight","wrapper","f","Spinner","BookListItem","book","onAddedToCart","title","author","price","coverImage","src","alt","onClick","ErrorIndicator","BookListContainer","this","books","loading","error","Component","BookList","map","id","bookList","mapDispatchToProps","onIncrease","onDecrease","onDelete","items","item","idx","count","HomePage","ShoppingCartTable","App","path","component","exact","CartPage","ErrorBoundry","state","hasError","setState","children","BookstoreService","Promise","resolve","reject","setTimeout","Math","random","console","log","updateBookList","action","undefined","updateOrder","quantity","find","cartBookIndex","findIndex","newCartItems","slice","updateCartItems","updateCartItem","reduce","prev","updateShoppingCart","reducer","store","createStore","ReactDOM","render","value","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.bb1415b8.chunk.js","sourcesContent":["import ShopHeader from './shop-header'\r\n\r\nexport default ShopHeader;","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport './shop-header.css'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ShopHeader = ({ numItems, total }) => {\r\n   return (\r\n      <header className=\"shop-header row\">\r\n         <Link to=\"/\">\r\n            <div className=\"logo text-dark\">ReStore</div>\r\n         </Link>\r\n         \r\n         <Link to=\"/cart\">\r\n            <div className=\"shopping-cart\">\r\n               <i className=\"cart-icon fa  fa-shopping-cart\" ></i>\r\n               {numItems} items (${total})\r\n            </div>\r\n         </Link>         \r\n      </header>\r\n   )\r\n}\r\nconst mapStateTorops = ({shoppingCart: { cartItems, orderTotal }}) => {\r\n   return {\r\n      numItems: cartItems.length,\r\n      total: orderTotal,\r\n   }\r\n}\r\n\r\nexport default connect(mapStateTorops)(ShopHeader)","import React from 'react'\r\n\r\nconst {\r\n   Provider: BookstoreServiceProvider,\r\n   Consumer: BookstoreServiceConsumer,\r\n} = React.createContext();\r\n\r\nexport {BookstoreServiceProvider, BookstoreServiceConsumer}","import React from 'react'\r\nimport {BookstoreServiceConsumer} from '../bookstore-service-context'\r\n\r\nconst withBookstoreService = () => (Wrapper) => {\r\n   return (props) => {\r\n      return (\r\n         <BookstoreServiceConsumer>\r\n            {\r\n               (bookstoreService) => {\r\n                  return (\r\n                     <Wrapper {...props}\r\n                              bookstoreService={bookstoreService} />\r\n                  )\r\n               }\r\n            }\r\n         </BookstoreServiceConsumer>\r\n      )\r\n   }\r\n}\r\n\r\nexport default withBookstoreService;","\r\nconst booksRequested = () => {\r\n   return {\r\n      type: 'FETCH_BOOKS_REQUEST'\r\n   }\r\n}\r\nconst booksLoaded = (newBooks) => {\r\n   return {\r\n      type: 'FETCH_BOOKS_SUCCESS',\r\n      payload: newBooks,\r\n   }\r\n}\r\n\r\nconst booksError = (error) => {\r\n   return {\r\n      type: 'FETCH_BOOKS_FAILURE',\r\n      payload: error,\r\n   }\r\n}\r\nconst fetchBooks = (bookstoreService, dispatch) => () => {\r\n   dispatch(booksRequested());\r\n   bookstoreService.getBooks()\r\n      .then((data) => dispatch(booksLoaded(data)))\r\n      .catch((err) => dispatch(booksError(err)))\r\n}\r\n\r\nconst bookAddedToCart = (bookId) => {\r\n   return {\r\n      type: 'BOOK_ADDED_TO_CART',\r\n      payload: bookId,\r\n   }\r\n}\r\n\r\nconst bookRemovedFromCart = (bookId) => {\r\n   return {\r\n      type: 'BOOK_REMOVED_FROM_CART',\r\n      payload: bookId,\r\n   }\r\n}\r\nconst allBooksRemovedFromCart = (bookId) => {\r\n   return {\r\n      type: 'ALL_BOOKS_REMOVED_FROM_CART',\r\n      payload: bookId,\r\n   }\r\n}\r\nexport {\r\n   fetchBooks,\r\n   bookAddedToCart,\r\n   bookRemovedFromCart,\r\n   allBooksRemovedFromCart,\r\n}","const compose = (...funcs) => (comp) => {\r\n   return funcs.reduceRight(\r\n      (wrapper, f) => f(wrapper), comp)\r\n}\r\n\r\nexport default compose;","import Spinner from './spinner'\r\n\r\nexport default Spinner;","import React from 'react'\r\nimport './spinner.css'\r\n\r\nconst Spinner = () => {\r\n   return (\r\n      <div className=\"spinner-container\">\r\n         <div className=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Spinner;","import BookListItem from './book-list-item'\r\n\r\nexport default BookListItem;","import React from 'react'\r\nimport './book-list-item.css'\r\n\r\nconst BookListItem = ({ book, onAddedToCart }) => {\r\n   const { title, author, price, coverImage } = book;\r\n\r\n   return (\r\n      <div className=\"book-list-item\">\r\n         <div className=\"book-cover\">\r\n            <img src={coverImage} alt=\"cover\"/>\r\n         </div>\r\n         <div className=\"book-details\">\r\n            <span className=\"book-title\">{ title }</span>\r\n            <div className=\"book-author\">{ author }</div>\r\n            <div className=\"book-price\">$ {price}</div>\r\n            <button\r\n               onClick={onAddedToCart}\r\n               className=\"btn btn-info add-to-cart\">\r\n               Add to Cart\r\n               </button>\r\n         </div>\r\n        \r\n      </div>\r\n   )\r\n}\r\n\r\nexport default BookListItem;","import ErrorIndicator from './error-indicator'\r\n\r\nexport default ErrorIndicator;","import React from 'react';\r\nimport './error-indicator.css'\r\n\r\nconst ErrorIndicator = () => {   \r\n   return (\r\n      <div className=\"error-indicator\">\r\n         <div className=\"boom\">Something has gone terribly wrong</div>\r\n         <div>\r\n            (but we will fix it soon)\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default ErrorIndicator;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withBookstoreService } from '../hoc-helpers'\r\nimport { fetchBooks, bookAddedToCart } from '../../actions';\r\nimport {compose} from '../../utils'\r\n\r\nimport Spinner from '../spinner'\r\nimport BookListItem from '../book-list-item'\r\nimport ErrorIndicator from '../error-indicator'\r\n\r\nimport './book-list.css'\r\n\r\nclass BookListContainer extends React.Component{\r\n\r\n   componentDidMount() {     \r\n      this.props.fetchBooks()      \r\n   }\r\n   render() {\r\n      const { books, loading, error, onAddedToCart } = this.props;\r\n\r\n      if (loading) {\r\n         return <Spinner />\r\n      }\r\n      if (error) {\r\n         return <ErrorIndicator />\r\n      }\r\n      return <BookList books={books} onAddedToCart={ onAddedToCart }/>\r\n   }\r\n}\r\n\r\nconst BookList = ({ books, onAddedToCart }) => {\r\n   return (\r\n      <ul className=\"book-list\">\r\n         {\r\n            books.map((book) => {\r\n               return (\r\n                  <li key={book.id}>\r\n                     <BookListItem\r\n                        book={book}\r\n                        onAddedToCart={ () => onAddedToCart(book.id)}/>\r\n                  </li>\r\n               )\r\n            })\r\n         }\r\n      </ul>\r\n   )\r\n}\r\n\r\nconst mapStateToProps = ({ bookList: { books, loading, error } }) => {\r\n   return { books, loading, error };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, {bookstoreService}) => {   \r\n   return {\r\n      fetchBooks: fetchBooks(bookstoreService, dispatch),\r\n      onAddedToCart: (id) => dispatch(bookAddedToCart(id))\r\n   }   \r\n}\r\n\r\nexport default compose(\r\n   withBookstoreService(),\r\n   connect(mapStateToProps, mapDispatchToProps)\r\n)(BookListContainer)","import BookList from './book-list'\r\n\r\nexport default BookList;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {bookAddedToCart, bookRemovedFromCart, allBooksRemovedFromCart } from '../../actions';\r\nimport './shopping-cart-table.css'\r\n\r\nconst ShoppingCartTable = ({ items, total, onIncrease, onDecrease, onDelete }) => {\r\n   const renderRow = (item, idx) => {\r\n      const { id, title, count, total } = item;\r\n      return (\r\n         <tr key={id}>\r\n            <td>{ idx + 1 }</td>\r\n            <td>{title}</td>\r\n            <td>{ count }</td>\r\n            <td>$ { total }</td>\r\n            <td>\r\n               <button\r\n                  onClick={() => onDelete(id)}\r\n                  className=\"btn btn-outline-danger btn-sm float-right\">\r\n               <i className=\"fa fa-trash\" />\r\n            </button>\r\n               <button\r\n                  onClick={() => onIncrease(id)}\r\n                  className=\"btn btn-outline-success btn-sm float-right\">\r\n               <i className=\"fa fa-plus-circle\" />\r\n            </button>\r\n               <button\r\n                  onClick={() => onDecrease(id)}\r\n                  className=\"btn btn-outline-warning btn-sm float-right\">\r\n               <i className=\"fa fa-minus-circle\" />\r\n            </button>\r\n            </td>\r\n         </tr>   \r\n      )\r\n   }\r\n\r\n   return (\r\n      <div className=\"shopping-cart-table\">\r\n         <h2>Your Order</h2>\r\n         <table className=\"table\">\r\n            <thead>\r\n               <tr>\r\n                  <th>#</th>\r\n                  <th>Item</th>\r\n                  <th>Count</th>\r\n                  <th>Total</th>\r\n                  <th>Action</th>\r\n               </tr>               \r\n            </thead>\r\n            <tbody>\r\n               { items.map(renderRow) }                           \r\n            </tbody>\r\n         </table>\r\n\r\n         <div className=\"total\">\r\n            Total: $ {total}\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nconst mapStateTorops = ({shoppingCart: { cartItems, orderTotal }}) => {\r\n   return {\r\n      items: cartItems,\r\n      total: orderTotal,\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps =  {   \r\n   onIncrease: bookAddedToCart,\r\n   onDecrease: bookRemovedFromCart,\r\n   onDelete: allBooksRemovedFromCart   \r\n}\r\n\r\nexport default connect(mapStateTorops, mapDispatchToProps)(ShoppingCartTable);","import React from 'react'\r\nimport BookList from '../book-list'\r\nimport ShoppingCartTable from '../shopping-cart-table/shopping-cart-table'\r\n\r\n\r\nconst HomePage = () => {\r\n   return (\r\n      <div>\r\n         <BookList />\r\n         <ShoppingCartTable />\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default HomePage;","import ShoppingCartTable from './shopping-cart-table'\r\n\r\nexport default ShoppingCartTable;","import React from 'react'\r\nimport ShoppingCartTable from '../shopping-cart-table'\r\nimport { connect } from 'react-redux'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nconst CartPage = ({length}) => {\r\n   if (length === 0) {\r\n      return <Redirect to=\"/\" />\r\n   }\r\n   return (\r\n      \r\n      <ShoppingCartTable />\r\n   )\r\n}\r\n\r\nconst mapStateTorops = ({shoppingCart: { cartItems }}) => {\r\n   return {\r\n      length: cartItems.length,\r\n   }\r\n}\r\n\r\nexport default connect(mapStateTorops)(CartPage);","import App from './app'\r\n\r\nexport default App","import React from 'react'\r\nimport { Route, Switch } from 'react-router-dom'\r\n\r\nimport ShopHeader from '../shop-header'\r\nimport { HomePage, CartPage } from '../pages'\r\n\r\nimport './app.css'\r\n\r\nconst App = () =>{\r\n   return (\r\n      <main className=\"container\">\r\n         <ShopHeader />\r\n         <Switch>\r\n            <Route path=\"/\" component={HomePage} exact/>\r\n            <Route path=\"/cart\" component={CartPage} />\r\n         </Switch>\r\n      </main>      \r\n   )\r\n}\r\n\r\nexport default App;","import ErrorBoundry from './error-boundry'\r\n\r\nexport default ErrorBoundry;","import React from 'react'\r\nimport ErrorIndicator from '../error-indicator'\r\n\r\nexport default class ErrorBoundry extends React.Component {\r\n   state = {\r\n      hasError: false,\r\n   }\r\n   \r\n   componentDidCatch() {\r\n      this.setState({\r\n         hasError: true,\r\n      })\r\n   }\r\n\r\n   render() {\r\n      if (this.state.hasError) {\r\n         return <ErrorIndicator />\r\n      }\r\n      return this.props.children\r\n   }\r\n}","export default class BookstoreService {\r\n\r\n   data = [\r\n      {\r\n         id: 1,\r\n         title: 'Production-Ready Microservices',\r\n         author: 'Susan J. Foweler',\r\n         price: 45,\r\n         coverImage: 'https://images-na.ssl-images-amazon.com/images/I/41yJ75gpV-L._SX381_BO1,204,203,200_.jpg',\r\n      },\r\n      {\r\n         id: 2,\r\n         title: 'Release It!',\r\n         author: 'Michael T. Nygard',\r\n         price: 55,\r\n         coverImage: 'https://images-na.ssl-images-amazon.com/images/I/414CRjLjwgL._SX403_BO1,204,203,200_.jpg',\r\n      },\r\n      {\r\n         id: 3,\r\n         title: 'Release It 2!',\r\n         author: 'Michael T. Nygard',\r\n         price: 60,\r\n         coverImage: 'https://images-na.ssl-images-amazon.com/images/I/414CRjLjwgL._SX403_BO1,204,203,200_.jpg',\r\n      }\r\n   ];\r\n\r\n   getBooks() {\r\n      return new Promise((resolve, reject) => {\r\n         setTimeout(() => {\r\n            if (Math.random() > 0.75) {\r\n               console.log('Reload page. This error was made on purpose.');\r\n               reject('Something went wrong')\r\n            }\r\n            resolve(this.data)\r\n         }, 1000)\r\n      })\r\n   }\r\n}","const updateBookList = (state, action) => {\r\n   if (state === undefined) {\r\n      return {\r\n         books: [],\r\n         loading: true,\r\n         error: null,\r\n      }\r\n   }\r\n   switch (action.type) {\r\n      case 'FETCH_BOOKS_REQUEST':\r\n         return {\r\n            books: [],\r\n            loading: true,\r\n            error: null,\r\n         };\r\n      \r\n      case 'FETCH_BOOKS_SUCCESS':\r\n         return {\r\n            books: action.payload,\r\n            loading: false,\r\n            error: null,\r\n         };\r\n      \r\n      case 'FETCH_BOOKS_FAILURE':\r\n         return {\r\n            books: [],\r\n            loading: false,\r\n            error: action.payload,\r\n         };\r\n      default:\r\n         return state.bookList;\r\n      \r\n   }\r\n}\r\n\r\nexport default updateBookList","const updateCartItems = (cartItems, item, idx) => {\r\n   if (item.count === 0) {\r\n      return [\r\n         ...cartItems.slice(0, idx),\r\n         ...cartItems.slice(idx + 1),\r\n      ]\r\n   }\r\n\r\n   if (idx === -1) {\r\n      return [\r\n         ...cartItems,\r\n         item\r\n      ]\r\n   }\r\n\r\n   return [\r\n      ...cartItems.slice(0, idx),\r\n      item,\r\n      ...cartItems.slice(idx + 1),\r\n   ]\r\n}\r\n\r\nconst updateCartItem = (book, item = {}, quantity) => {\r\n   const {\r\n      id = book.id,\r\n      count = 0,\r\n      title = book.title,\r\n      total = 0\r\n   } = item;\r\n\r\n   return {\r\n      id,\r\n      title,\r\n      count: count + quantity,\r\n      total: total + quantity * book.price\r\n   }\r\n}\r\n\r\nconst updateOrder = (state, bookId, quantity) => {\r\n   const { bookList: { books }, shoppingCart: { cartItems } } = state;\r\n\r\n   const book = books.find((book) => book.id === bookId);\r\n   const cartBookIndex = cartItems.findIndex((book) => book.id === bookId);\r\n   const cartBook = cartItems[cartBookIndex];\r\n\r\n   const newItem = updateCartItem(book, cartBook, quantity);\r\n   const newCartItems = updateCartItems(cartItems, newItem, cartBookIndex)\r\n   return {\r\n      orderTotal: newCartItems.reduce((prev, {total}) => prev + total, 0),\r\n      cartItems: newCartItems,\r\n   };\r\n}\r\nconst updateShoppingCart = (state, action) => {\r\n   if (state === undefined) {\r\n      return {\r\n         cartItems: [ ],\r\n         orderTotal: 0,\r\n      }\r\n   }\r\n   switch (action.type) {   \r\n      case 'BOOK_ADDED_TO_CART': \r\n         return updateOrder(state, action.payload, 1);      \r\n         \r\n      case 'BOOK_REMOVED_FROM_CART': \r\n         return updateOrder(state, action.payload, -1);      \r\n         \r\n      case 'ALL_BOOKS_REMOVED_FROM_CART': \r\n         const item = state.shoppingCart.cartItems.find((book) => book.id === action.payload)\r\n         return updateOrder(state, action.payload, -item.count);\r\n      \r\n      default:\r\n         return state.shoppingCart;\r\n   }\r\n}\r\n\r\nexport default updateShoppingCart;","import updateBookList from './book-list'\r\nimport updateShoppingCart from './shopping-cart'\r\n\r\nconst reducer = (state, action) => {\r\n   return {\r\n      bookList: updateBookList(state, action),\r\n      shoppingCart: updateShoppingCart(state, action)\r\n   }   \r\n}\r\n\r\nexport default reducer;","import { createStore } from 'redux'\r\n\r\nimport reducer from './reducers'\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport { HashRouter as Router } from 'react-router-dom'\r\n\r\nimport App from './components/app'\r\nimport ErrorBoundry from './components/error-boundry'\r\nimport BookstoreService from './services/bookstore-service'\r\nimport { BookstoreServiceProvider } from './components/bookstore-service-context'\r\n\r\nimport store from './store';\r\nconst bookstoreService = new BookstoreService();\r\nReactDOM.render(\r\n   <Provider store={store}>\r\n      <ErrorBoundry>\r\n         <BookstoreServiceProvider value={bookstoreService}>\r\n            <Router basename={process.env.PUBLIC_URL}>\r\n               <App />\r\n            </Router>\r\n         </BookstoreServiceProvider>         \r\n      </ErrorBoundry>\r\n   </Provider>\r\n   , document.getElementById('root'));"],"sourceRoot":""}